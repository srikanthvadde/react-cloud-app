version: 2.1

executors:
  app-executor:
    docker:
      - image: circleci/node:14.5.0
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
      run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
  - &restore_cache
      restore_cache:
        keys:
          - app-{{ checksum "package.json" }}
          - app- 
  - &dependency-install
      run:
        name: Install dependency
        command: npm install
  - &saving_cache
      save_cache:
        paths:
          - node_modules
        key: app-{{ checksum "package.json" }}
  - &install_aws_cli_dependencies
      run:
        name: Installing AWS CLI
        working_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get -y install awscli
          sudo apt-get -y install python-pip python-dev build-essential
  - &build_project
      run:
        name: Build Project
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build successful"
  

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore_cache
      - *dependency-install
      - *saving_cache
      
  linting:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore_cache 
      - run:
          name: Run EsLint
          command: |
            rm -rf node_modules/eslint
            npm run lint

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install_aws_cli_dependencies
      - *build_project
      - run:
          name: Deploy to AWS s3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws --region ${AWS_REGION} s3 sync  ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync  ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync  ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi


  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install_aws_cli_dependencies
      - *build_project
      - run:
          name: Deploy to Aws Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then 
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master 
      - deploy-to-aws-s3:
          requires:
            - linting
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master




               

